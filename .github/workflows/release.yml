on:
  push:
    branches:
      - master
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      NEW_LINE: |+

        *
        *

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name : Check for new version
        run: |
          VERSION=v$( cat VERSION )
          if git tag --list | grep -q ${VERSION}; then echo "NEW_VERSION=${VERSION}" >> $GITHUB_ENV ; else echo "no match"; fi
#      - name: Create tag for new version
#        if: env.NEW_VERSION != ''
#        uses: actions/github-script@v3
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            github.git.createRef({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              ref: "refs/tags/${{ env.NEW_VERSION }}",
#              sha: context.sha
#            })
      - name: print message
        run: echo "${{ join( github.event.commits.*.message, env.NEW_LINE ) }}"
      - name: Create Release
        id: create_release
        if: env.NEW_VERSION != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: ${{ env.NEW_VERSION }}
          body: ${{ join( github.event.commits.*.message, env.NEW_LINE ) }}
          draft: false
          prerelease: false
